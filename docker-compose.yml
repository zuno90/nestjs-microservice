version: "3.9"
services:
    orders:
        container_name: order_service
        build:
            context: .
            dockerfile: ./apps/orders/Dockerfile
            target: development
        command: yarn start:dev orders
        env_file:
            - ./apps/orders/.env
        depends_on:
            - mongodb-primary
            - mongodb-secondary
            - mongodb-arbiter
            - rabbitmq
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        ports:
            - "3000:3000"

    mail:
        container_name: mail_service
        build:
            context: .
            dockerfile: ./apps/mail/Dockerfile
            target: development
        command: yarn start:dev mail
        env_file:
            - ./apps/mail/.env
        depends_on:
            - mongodb-primary
            - mongodb-secondary
            - mongodb-arbiter
            - rabbitmq
            - auth
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules

    billing:
        container_name: billing_service
        build:
            context: .
            dockerfile: ./apps/billing/Dockerfile
            target: development
        command: yarn start:dev billing
        env_file:
            - ./apps/billing/.env
        depends_on:
            - mongodb-primary
            - mongodb-secondary
            - mongodb-arbiter
            - rabbitmq
            - auth
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules

    auth:
        container_name: auth_service
        build:
            context: .
            dockerfile: ./apps/auth/Dockerfile
            target: development
        command: yarn start:dev auth
        ports:
            - "3001:3001"
        env_file:
            - ./apps/auth/.env
        depends_on:
            - mongodb-primary
            - mongodb-secondary
            - mongodb-arbiter
            - rabbitmq
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules

    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq
        ports:
            - "5672:5672"

    mongodb-primary:
        container_name: main_mongo
        image: docker.io/bitnami/mongodb:5.0
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
            - MONGODB_REPLICA_SET_MODE=primary
            - MONGODB_ROOT_PASSWORD=password123
            - MONGODB_REPLICA_SET_KEY=replicasetkey123
        volumes:
            - "mongodb_master_data:/bitnami/mongodb"
        ports:
            - "27017:27017"

    mongodb-secondary:
        container_name: second_mongo
        image: docker.io/bitnami/mongodb:5.0
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
            - MONGODB_REPLICA_SET_MODE=secondary
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
            - MONGODB_REPLICA_SET_KEY=replicasetkey123

    mongodb-arbiter:
        container_name: arbiter_mongo
        image: docker.io/bitnami/mongodb:5.0
        depends_on:
            - mongodb-primary
        environment:
            - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
            - MONGODB_REPLICA_SET_MODE=arbiter
            - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
            - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
            - MONGODB_REPLICA_SET_KEY=replicasetkey123

volumes:
    mongodb_master_data:
        driver: local
